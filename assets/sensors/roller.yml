sensor:
  # By default:
  # - Sensor (camera) is placed towards x-axis
  # - Sensor origin is the same as .stl/.obj origin
  
  camera:
    - cam0:
      position: [0.00, 0, 0] # Camera position
      orientation: [90, 0, 0] # Euler angles, "xyz", in degrees; e.g. [0, 0, 0]: towards negative z-axis; [90, 0, -90]: towards x-axis
      yfov: 180 # Vertical field of view in degrees
      znear: 0.001 # Distance to the near clipping plane, in meters
      lightIDList: [0, 1, 2, 3, 4, 5] # Select light ID list for rendering (OpenGL has max limit of 8 lights)
  
  gel:
    origin: [0.0, 0, 0.0] # Center coordinate of the gel, in meters
    width: 0.02 # Width of the gel, y-axis, in meters
    height: 0.03 # Height of the gel, z-axis, in meters
    curvature: True  # Model the gel as curve? True/False
    curvatureMax: 0.005  # Deformation of the gel due to convexity
    R: 0.1 # Radius of curved gel
    countW: 100 # Number of samples for horizontal direction; higher the finer details
    mesh: "assets/sensors/cylinder.stl" # Mesh file for the gel

  lights:
    # Light position & properties. 
    origin: [0, 0, 0] # center of the light plane, in meters
    polar: True # True: apply polar coordinates; False: apply cartesian coordinates;    
    xrtheta: # polar coordinates in y-z plane
      xs: [0.015, 0.015, 0.015, 0.015, 0.015, 0.015] # x coordinate of the y-z plane
      rs: [-0.015, -0.015, -0.015, 0.015, 0.015, 0.015] # r in polar coordinates
      thetas: [0, 120, 240, 60, 180, 300] # theta in polar coordinates, in degrees
    
    colors: [[0, 0, 1], [0, 1, 0], [1, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0]] # R G B color
    intensities: [0.15, 0.15, 0.15, 0.15, 0.15, 0.15] # light intensity

  noise:
    color:
      mean: 0 
      std: 0

  force:
    enable: True # flag for enable force feedback. When enabled, the larger normal force is, the closer object is adjusted to the sensor. 
    range_force: [0, 100] # dynamic range of forces used to simulate the elastomer deformation
    max_deformation: 0.001 # max pose depth adjustment, in meters